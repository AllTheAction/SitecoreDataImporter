<?xml version="1.0" encoding="utf-8"?>
<configuration>
    <configSections>
        <section name="sitecore" type="Sitecore.FakeDb.Configuration.ConfigReader, Sitecore.FakeDb" />
        <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, Sitecore.Logging" />
    </configSections>
    <appSettings>
        <add key="xunit.parallelizeTestCollections" value="false" />
    </appSettings>
    <sitecore database="Fake">

        <!-- DATABASE TYPE
     For Sitecore versions prior to 8.2 should be 'Sitecore.Data.Database, Sitecore.Kernel'.
     For Sitecore 8.2 and later should be 'Sitecore.Data.DefaultDatabase, Sitecore.Kernel'. -->
        <sc.variable name="databaseType" value="Sitecore.Data.DefaultDatabase, Sitecore.Kernel" />

        <!-- SETTINGS -->
        <settings>
            <setting name="LicenseFile" value="${Testing.LicensePath}" />
            <setting name="Caching.Enabled" value="false" />
            <setting name="MaxWorkerThreads" value="0" />
            <setting name="FakeDb.AutoTranslate" value="false" />
            <setting name="FakeDb.AutoTranslatePrefix" value="" />
            <setting name="FakeDb.AutoTranslateSuffix" value="" />
        </settings>
        <!-- FIELD TYPES -->
        <!-- LINK DATABASE -->
        <LinkDatabase type="Sitecore.FakeDb.Links.FakeLinkDatabase, Sitecore.FakeDb" />
        <!-- TASK DATABASE -->
        <TaskDatabase type="Sitecore.FakeDb.Tasks.FakeTaskDatabase, Sitecore.FakeDb" />
        <!-- ID TABLE -->
        <IDTable type="Sitecore.FakeDb.Data.IDTables.FakeIDTableProvider, Sitecore.FakeDb" singleInstance="true" />
        <!-- PIPELINES -->
        <pipelines>
            <initialize />
            <getFieldValue performanceCritical="true">
                <processor type="Sitecore.Pipelines.GetFieldValue.GetInheritedValue, Sitecore.Kernel" />
                <processor type="Sitecore.Pipelines.GetFieldValue.GetStandardValue, Sitecore.Kernel" />
                <processor type="Sitecore.Pipelines.GetFieldValue.GetDefaultValue, Sitecore.Kernel" />
            </getFieldValue>
            <!-- FakeDb -->
            <initFakeDb>
                <processor type="Sitecore.FakeDb.Pipelines.InitFakeDb.InitGlobals, Sitecore.FakeDb" />
            </initFakeDb>
            <releaseFakeDb>
                <processor type="Sitecore.FakeDb.Pipelines.ReleaseFakeDb.ReleasePipelineWatcher, Sitecore.FakeDb" />
                <processor type="Sitecore.FakeDb.Pipelines.ReleaseFakeDb.ResetTemplateEngine, Sitecore.FakeDb" />
                <processor type="Sitecore.FakeDb.Pipelines.ReleaseFakeDb.ResetFactory, Sitecore.FakeDb" />
                <processor type="Sitecore.FakeDb.Pipelines.ReleaseFakeDb.ResetSettings, Sitecore.FakeDb" />
            </releaseFakeDb>
            <addDbItem>
                <processor type="Sitecore.FakeDb.Pipelines.AddDbItem.SetStatistics, Sitecore.FakeDb" />
                <processor type="Sitecore.FakeDb.Pipelines.AddDbItem.SetParent, Sitecore.FakeDb" />
                <processor type="Sitecore.FakeDb.Pipelines.AddDbItem.CreateTemplate, Sitecore.FakeDb" />
                <processor type="Sitecore.FakeDb.Pipelines.AddDbItem.EnsureIsChild, Sitecore.FakeDb" />
                <processor type="Sitecore.FakeDb.Pipelines.AddDbItem.SetFullPath, Sitecore.FakeDb" />
                <processor type="Sitecore.FakeDb.Pipelines.AddDbItem.AddVersion, Sitecore.FakeDb" />
                <processor type="Sitecore.FakeDb.Pipelines.AddDbItem.SetAccess, Sitecore.FakeDb" />
            </addDbItem>
            <getTranslation>
                <processor type="Sitecore.FakeDb.Pipelines.GetTranslation.GetFakeTranslation, Sitecore.FakeDb" />
            </getTranslation>
            <!-- Analytics -->
            <loadVisitor />
        </pipelines>
        <dataProviders>
            <main type="Sitecore.FakeDb.Data.DataProviders.$(database)DataProvider, Sitecore.FakeDb">
                <CacheOptions.DisableAll>true</CacheOptions.DisableAll>
            </main>
        </dataProviders>
        <!-- EVENTING -->
        <eventing defaultProvider="sitecore">
            <providers>
                <clear />
                <add name="sitecore" type="Sitecore.Eventing.EventProvider, Sitecore.Kernel" systemDatabaseName="core" />
            </providers>
        </eventing>
        <!-- DATABASES -->
        <databases>
            <!-- core -->
            <database id="core" type="Sitecore.Data.DefaultDatabase, Sitecore.Kernel" singleInstance="true">
                <param desc="name">$(id)</param>
                <dataProviders hint="list:AddDataProvider">
                    <dataProvider ref="dataProviders/main" />
                </dataProviders>
            </database>
            <!-- master -->
            <database id="master" type="Sitecore.Data.DefaultDatabase, Sitecore.Kernel" singleInstance="true">
                <param desc="name">$(id)</param>
                <dataProviders hint="list:AddDataProvider">
                    <dataProvider ref="dataProviders/main" />
                </dataProviders>
            </database>
            <!-- web -->
            <database id="web" type="Sitecore.Data.DefaultDatabase, Sitecore.Kernel" singleInstance="true">
                <param desc="name">$(id)</param>
                <dataProviders hint="list:AddDataProvider">
                    <dataProvider ref="dataProviders/main" />
                </dataProviders>
            </database>
            <database id="fake1" type="Sitecore.Data.DefaultDatabase, Sitecore.Kernel" singleInstance="true">
                <param desc="name">$(id)</param>
                <dataProviders hint="list:AddDataProvider">
                    <dataProvider ref="dataProviders/main" />
                </dataProviders>
            </database>
            <database id="fake2" type="Sitecore.Data.DefaultDatabase, Sitecore.Kernel" singleInstance="true">
                <param desc="name">$(id)</param>
                <dataProviders hint="list:AddDataProvider">
                    <dataProvider ref="dataProviders/main" />
                </dataProviders>
            </database>
            <database id="fake3" type="Sitecore.Data.DefaultDatabase, Sitecore.Kernel" singleInstance="true">
                <param desc="name">$(id)</param>
                <dataProviders hint="list:AddDataProvider">
                    <dataProvider ref="dataProviders/main" />
                </dataProviders>
            </database>
            <database id="fake4" type="Sitecore.Data.DefaultDatabase, Sitecore.Kernel" singleInstance="true">
                <param desc="name">$(id)</param>
                <dataProviders hint="list:AddDataProvider">
                    <dataProvider ref="dataProviders/main" />
                </dataProviders>
            </database>
            <database id="fake5" type="Sitecore.Data.DefaultDatabase, Sitecore.Kernel" singleInstance="true">
                <param desc="name">$(id)</param>
                <dataProviders hint="list:AddDataProvider">
                    <dataProvider ref="dataProviders/main" />
                </dataProviders>
            </database>
        </databases>
        <archives defaultProvider="sql" enabled="true">
            <providers>
                <clear />
                <add name="sql" type="Sitecore.Data.Archiving.SqlArchiveProvider, Sitecore.Kernel" database="*" />
            </providers>
        </archives>
        <clientDataStore type="Sitecore.FakeDb.Configuration.ClientDataStoreStub, Sitecore.FakeDb" />
        <!-- CONFIG STORES -->
        <configStores>
            <add name="globalRoles" type="Sitecore.Configuration.XmlConfigStore, Sitecore.Kernel">
                <param>roles</param>
            </add>
        </configStores>
        <!-- ITEM MANAGER -->
        <itemManager defaultProvider="default">
            <providers>
                <clear />
                <add name="default" type="Sitecore.Data.Managers.ItemProvider, Sitecore.Kernel" />
            </providers>
        </itemManager>
        <!-- DOMAINS -->
        <domainManager>
            <providers>
                <clear />
                <add name="fake" type="Sitecore.FakeDb.SecurityModel.FakeDomainProvider, Sitecore.FakeDb" />
            </providers>
        </domainManager>
        <!-- SITES -->
        <siteManager defaultProvider="config">
            <providers>
                <clear />
                <add name="config" type="Sitecore.Sites.ConfigSiteProvider, Sitecore.Kernel" siteList="sites" checkSecurity="false" />
            </providers>
        </siteManager>
        <!-- LINKS -->
        <linkManager defaultProvider="sitecore">
            <providers>
                <clear />
                <add name="sitecore" type="Sitecore.Links.LinkProvider, Sitecore.Kernel" addAspxExtension="true" alwaysIncludeServerUrl="false" encodeNames="true" languageEmbedding="asNeeded" languageLocation="filePath" lowercaseUrls="false" shortenUrls="true" useDisplayName="false" />
                <add name="switcher" type="Sitecore.FakeDb.Links.SwitchingLinkProvider, Sitecore.FakeDb" />
            </providers>
        </linkManager>
        <!-- STANDARD VALUES -->
        <standardValues defaultProvider="fake">
            <providers>
                <clear />
                <add name="fake" type="Sitecore.FakeDb.Data.FakeStandardValuesProvider, Sitecore.FakeDb" />
            </providers>
        </standardValues>
        <!-- AUTHENTICATION -->
        <authentication defaultProvider="switcher">
            <providers>
                <clear />
                <add name="switcher" type="Sitecore.FakeDb.Security.Authentication.SwitchingAuthenticationProvider, Sitecore.FakeDb" defaultProvider="fake" />
                <add name="fake" type="Sitecore.FakeDb.Security.Authentication.FakeAuthenticationProvider, Sitecore.FakeDb" />
            </providers>
        </authentication>
        <!-- ROLES -->
        <rolesInRolesManager>
            <providers>
                <clear />
                <add name="fake" type="Sitecore.FakeDb.Security.Accounts.FakeRolesInRolesProvider, Sitecore.FakeDb" globalRolesConfigStoreName="globalRoles" />
            </providers>
        </rolesInRolesManager>
        <!-- AUTHORIZATION -->
        <authorization>
            <providers>
                <clear />
                <add name="fake" type="Sitecore.FakeDb.Security.AccessControl.FakeAuthorizationProvider, Sitecore.FakeDb" />
            </providers>
        </authorization>
        <!-- ACCESS RIGHTS -->
        <accessRights>
            <providers>
                <clear />
                <add name="fake" type="Sitecore.FakeDb.Security.AccessControl.FakeAccessRightProvider, Sitecore.FakeDb" />
            </providers>
        </accessRights>
        <!-- SEARCH -->
        <contentSearch>
            <configuration type="Sitecore.ContentSearch.ProviderIndexSearchConfiguration, Sitecore.ContentSearch" />
        </contentSearch>
        <switchingProviders>
            <membership>
                <provider providerName="fake" storeFullNames="true" wildcard="%" domains="*" />
            </membership>
            <roleManager>
                <provider providerName="fake" storeFullNames="true" wildcard="%" domains="*" />
            </roleManager>
            <profile>
                <provider providerName="fake" storeFullNames="true" wildcard="%" domains="*" />
            </profile>
        </switchingProviders>
        <mediaLibrary>
            <!-- MEDIA PROVIDER -->
            <mediaProvider type="Sitecore.FakeDb.Resources.Media.FakeMediaProvider, Sitecore.FakeDb" />
        </mediaLibrary>
        <!-- SERIALIZATION FOLDERS -->
        <szfolders>
            <folder name="master" value="..\..\..\Tds.Master\" />
        </szfolders>
        <pipelines>
            <loadDsDbItem>
                <processor type="Sitecore.FakeDb.Serialization.Pipelines.DeserializeLinkedTemplate, Sitecore.FakeDb.Serialization" />
                <processor type="Sitecore.FakeDb.Serialization.Pipelines.CopySharedFields, Sitecore.FakeDb.Serialization" />
                <processor type="Sitecore.FakeDb.Serialization.Pipelines.CopyVersionedFields, Sitecore.FakeDb.Serialization" />
                <processor type="Sitecore.FakeDb.Serialization.Pipelines.DeserializeDescendants, Sitecore.FakeDb.Serialization" />
            </loadDsDbItem>
            <loadDsDbTemplate>
                <processor type="Sitecore.FakeDb.Serialization.Pipelines.LoadTemplateFields, Sitecore.FakeDb.Serialization" />
            </loadDsDbTemplate>
        </pipelines>
    </sitecore>
    <log4net />
    <system.web>
        <membership defaultProvider="fake">
            <providers>
                <clear />
                <add name="fake" type="Sitecore.FakeDb.Security.Web.FakeMembershipProvider, Sitecore.FakeDb" />
            </providers>
        </membership>
        <roleManager defaultProvider="fake" enabled="true">
            <providers>
                <clear />
                <add name="fake" type="Sitecore.FakeDb.Security.Web.FakeRoleProvider, Sitecore.FakeDb" />
            </providers>
        </roleManager>
        <profile defaultProvider="fake" enabled="true" inherits="Sitecore.FakeDb.Profile.FakeUserProfile, Sitecore.FakeDb">
            <providers>
                <clear />
                <add name="fake" type="Sitecore.FakeDb.Security.Web.FakeProfileProvider, Sitecore.FakeDb" />
            </providers>
            <properties>
                <clear />
                <add type="System.String" name="SC_UserData" />
            </properties>
        </profile>
    </system.web>

    <runtime>
        <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
            <dependentAssembly>
                <assemblyIdentity name="Lucene.Net" publicKeyToken="85089178b9ac3181" />
                <bindingRedirect oldVersion="0.0.0.0-2.9.4.0" newVersion="3.0.3.0" />
            </dependentAssembly>
            <dependentAssembly>
                <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
                <bindingRedirect oldVersion="0.0.0.0-9.0.0.0" newVersion="9.0.0.0" />
            </dependentAssembly>
            <dependentAssembly>
                <assemblyIdentity name="Microsoft.Extensions.DependencyInjection.Abstractions" publicKeyToken="adb9793829ddae60" culture="neutral" />
                <bindingRedirect oldVersion="0.0.0.0-1.1.0.0" newVersion="1.1.0.0" />
            </dependentAssembly>
            <dependentAssembly>
                <assemblyIdentity name="Microsoft.Extensions.DependencyInjection" publicKeyToken="adb9793829ddae60" culture="neutral" />
                <bindingRedirect oldVersion="0.0.0.0-1.1.0.0" newVersion="1.1.0.0" />
            </dependentAssembly>
            <dependentAssembly>
                <assemblyIdentity name="Autofac" publicKeyToken="17863af14b0044da" culture="neutral" />
                <bindingRedirect oldVersion="0.0.0.0-4.5.0.0" newVersion="4.5.0.0" />
            </dependentAssembly>
            <dependentAssembly>
                <assemblyIdentity name="Castle.Core" publicKeyToken="407dd0808d44fbdc" culture="neutral" />
                <bindingRedirect oldVersion="0.0.0.0-3.3.0.0" newVersion="3.3.0.0" />
            </dependentAssembly>
            <dependentAssembly>
                <assemblyIdentity name="Microsoft.Practices.ServiceLocation" publicKeyToken="31bf3856ad364e35" culture="neutral" />
                <bindingRedirect oldVersion="0.0.0.0-1.3.0.0" newVersion="1.3.0.0" />
            </dependentAssembly>
        </assemblyBinding>
    </runtime>
</configuration>